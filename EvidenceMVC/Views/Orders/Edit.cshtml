@model EvidenceMVC.ViewModels.OrderVM
@{
    ViewBag.Title = "Edit";
}

<h2>Update order</h2>


<div class="row">
    <div class="col">
        @using (Ajax.BeginForm("Edit", "Orders", new AjaxOptions { HttpMethod = "POST", InsertionMode = InsertionMode.Replace, UpdateTargetId = "msg-EditOrder" }, new { id = "OrderEditForm", enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(x => x.Order.OrderId)
            @Html.HiddenFor(x => x.Order.CustomerId)

            <div id="SingleProductSection" class="mb-2">

                <div class="card mb-4">
                    <div class="card-header row no-gutters jumbotron p-2 mb-1">

                        <div class="col-md-10">
                            <b>Order Id :</b> @Model.Order.OrderId<br />
                            <b>Customer Name :</b> @Model.Order.Customer.CustomerName
                        </div>


                    </div>
                    <div class="card-body">
                        <table class="table table-bordered table-striped table-sm">
                            <thead>
                                <tr>
                                    <th>Product</th>
                                    <th>Quantity</th>
                                    <th>Unit Price</th>
                                    <th>Item Total</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody id="SingleProductEditItemContainer">
                                @for (int i = 0; i < Model.OrderDetails.Count(); i++)
                                {
                                    <tr>
                                        @Html.HiddenFor(x => x.OrderDetails[i].OrderDetailsId)
                                        @Html.HiddenFor(x => x.OrderDetails[i].OrderId)
                                        @Html.HiddenFor(x => x.OrderDetails[i].Price)


                                        <td> @Html.DropDownListFor(x => x.OrderDetails[i].ProductId, new SelectList(ViewBag.products, "ProductId", "ProductName", Model.OrderDetails[i].ProductId), "-----Select-----", new { @class = "form-control singleProductEditDropdown" })</td>

                                        <td>@Html.TextBoxFor(x => x.OrderDetails[i].Quantity, "", new { @class = "form-control", Type = "number" })</td>
                                        <td class="singleProductEditPrice">@Model.OrderDetails[i].Price</td>
                                        <td>@(Model.OrderDetails[i].Quantity * Model.OrderDetails[i].Price)</td>
                                        <td><button type="button" class="btn btn-outline-danger btn-sm single-product-edit-delete"><i class="fa fa-trash"></i></button></td>
                                    </tr>
                                }

                            </tbody>
                            <tfoot>
                                <tr>
                                    <td colspan="2"></td>
                                    <td><b>Total</b></td>
                                    <td>@( (Model.OrderDetails.Sum(x=>x.Price))*(Model.OrderDetails.Sum(x => x.Quantity)) )</td>
                                </tr>
                            </tfoot>
                        </table>
                        <div class="mb-2 d-flex justify-content-end">
                            <button id="AddSingleEditProduct" class="btn btn btn-primary" type="button">+</button>
                        </div>
                    </div>
                </div>

            </div>


            <div class="form-group row">
                <div class="col-10">
                    <button type="submit" class="btn btn-primary" id="btnCreate"><i class="fa fa-save"></i> Save</button>
                    <div id="msg-EditOrder"></div>
                </div>
            </div>
        }
    </div>
</div>